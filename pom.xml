<?xml version="1.0" encoding="UTF-8"?>
<!-- Template: Source + GWT + in workspace dependencies 17.10.2010 -->
<project>
	<properties>
		<module.group>mx.console</module.group>    <!-- Maven groupId -->
		<module.name>mxConsole</module.name>             <!-- Maven artifactId -->
		<module.version>0.0.2-SNAPSHOT</module.version> <!-- Maven artifact version -->
		<module.gwtVersion>2.2.0</module.gwtVersion>
		<module.draftCompile>true</module.draftCompile>
		<module.importedPackages>
			org.junit,*
		</module.importedPackages>
		<module.exportedPackages>!mx.console.internal*,mx.console*
		</module.exportedPackages>
		<module.serviceDefinitions>
		</module.serviceDefinitions>
	</properties>

	<!-- Dependent Modules -->
	<dependencies>
		<!-- <dependency>
			<groupId>de.mxro.thrd.hamcrestgwt</groupId>
			<artifactId>thrdHamcrestGWT</artifactId>
			<version>[0.0.3,)</version>

		</dependency>

		<dependency>
			<groupId>de.mxro.thrd.guavagwt</groupId>
			<artifactId>thrdGuavaGwt</artifactId>
			<version>[0.0.1,)</version>
		</dependency> -->


		<!-- only for gwt maven plugin!!! -->
		<dependency>
			<groupId>com.google.gwt</groupId>
			<artifactId>gwt-user</artifactId>
			<version>${module.gwtVersion}</version>
			<scope>provided</scope>
		</dependency>

		<!-- <dependency>
			<groupId>de.mxro.gtwutils</groupId>
			<artifactId>mxGWTUtils</artifactId>
			<version>[0.0.1,)</version>

		</dependency> -->


		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.4</version>
			<scope>test</scope>
		</dependency>


	</dependencies>


	<!-- XXXXXXXXXXXXXX Maven declarations XXXXXXXXXXXXXXXXXX -->

	<modelVersion>4.0.0</modelVersion>
	<groupId>${module.group}</groupId>
	<artifactId>${module.name}</artifactId>
	<version>${module.version}</version>
	<name>${module.name}</name>
	<packaging>bundle</packaging>
	<url>http://www.linnk.de/</url>
	<build>

		<plugins>
			<!-- <plugin> <groupId>org.codehaus.mojo</groupId> <artifactId>findbugs-maven-plugin</artifactId> 
				<version>2.3.1-SNAPSHOT</version> </plugin> -->


			<plugin>
				<artifactId>maven-compiler-plugin</artifactId>
				<configuration>
					<source>1.6</source>
					<target>1.6</target>
				</configuration>
			</plugin>


			<!-- FOR BUNDLE MANAGEMENT -->
			<!-- The Maven bundle plugin generates Meta-data required for OSGi -->

			<plugin>
				<groupId>org.apache.felix</groupId>
				<artifactId>maven-bundle-plugin</artifactId>
				<version>2.2.0</version>
				<extensions>true</extensions>
				<configuration>
					<instructions>
						<Bundle-SymbolicName>${pom.artifactId}</Bundle-SymbolicName>
						<Bundle-Version>${pom.version}</Bundle-Version>
						<Import-Package>${module.importedPackages}</Import-Package>
						<Export-Package>${module.exportedPackages}</Export-Package>
						<Service-Component>${module.serviceDefinitions}
						</Service-Component>
						<Bundle-RequiredExecutionEnvironment>JavaSE-1.6
						</Bundle-RequiredExecutionEnvironment>
					</instructions>
				</configuration>
			</plugin>


			<!-- XXXXXXXXXXXXXXXXXXXXXXXXXXXXX -->
			<!-- For GWT -->
			<!-- XXXXXXXXXXXXXXXXXXXXXXXXXXXXX -->
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>gwt-maven-plugin</artifactId>
				<version>2.2.0</version>
				<configuration>
					
					<draftCompile>${module.draftCompile}</draftCompile>
					<logLevel>INFO</logLevel>

					<validateOnly>true</validateOnly>
					<gwtVersion>${module.gwtVersion}</gwtVersion>
					<!-- <runTarget>src/main/webapp/ZzSampleGWT204Project.html</runTarget> -->
					<!-- <hostedWebapp>${basedir}/src/main/webapp/zzsamplegwt204project</hostedWebapp> -->
					<!-- <hostedWebapp>${project.build.directory}/${project.build.finalName}</hostedWebapp> -->

					<webappDirectory>${basedir}/src/main/webapp</webappDirectory>


					<!-- <modules> <module>de.linnk.nx.Nx</module> </modules> -->


				</configuration>
				<executions>
					<execution>
						<id>gwtcompile</id>
						<phase>prepare-package</phase>
						<goals>
							<goal>compile</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

			<!-- FOR MAVEN ECLIPSE PLUGIN -->
			<!-- Dependency Plugin used to copy the dependency JARs into the root 
				project folder. There the Maven eclipse plugin will add them to the classpath 
				of PDE projects. -->
			<plugin>
				<artifactId>maven-dependency-plugin</artifactId>
				<executions>
					<execution>
						<id>copy-dependencies</id>
						<phase>process-sources</phase>
						<goals>
							<goal>copy-dependencies</goal>
						</goals>
						<configuration>
							<outputDirectory>${basedir}</outputDirectory>
							<overWriteReleases>false</overWriteReleases>
							<overWriteSnapshots>false</overWriteSnapshots>
							<overWriteIfNewer>true</overWriteIfNewer>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<!-- Cleanup necessary because of PDE tweaks, clear the project directory -->
			<plugin>
				<artifactId>maven-clean-plugin</artifactId>
				<version>2.3</version>
				<configuration>
					<filesets>
						<fileset>
							<directory>${basedir}</directory>
							<includes>
								<include>*.jar</include>
							</includes>
							<followSymlinks>false</followSymlinks>
						</fileset>
					</filesets>
				</configuration>
			</plugin>

			<!-- Keep the MANIFEST.MF used by eclipse in sync with the MANIFEST.MF 
				created by the maven bundle plugin -->
			<plugin>
				<artifactId>maven-antrun-plugin</artifactId>
				<executions>
					<execution>
						<phase>package</phase>
						<goals>
							<goal>run</goal>
						</goals>
						<configuration>
							<tasks>
								<delete file="${basedir}/META-INF/MANIFEST.MF" />
								<copy file="target/classes/META-INF/MANIFEST.MF" tofile="${basedir}/META-INF/MANIFEST.MF" />
							</tasks>
						</configuration>
					</execution>
				</executions>
			</plugin>

		</plugins>

		<!-- RESOURCES -->
		<resources>
			<!-- Required to be valid GWT Library (requires *.java files in jar) -->

			<resource>
				<directory>src/main/java</directory>
				<includes>
					<include>**/*.java</include>
					<include>**/*.gwt.xml</include>
				</includes>
			</resource>


			<!-- This entry makes sure that resources, which lie in the same package 
				as Java classes, are copied into the target. Often external libraries require 
				resources, which are loaded using Class.getResource or Class.getResourceAsStream 
				and which are in a subpackage of the class. For instance, the NetBeans template 
				for the Swing Application Framework does so. -->
			<resource>
				<filtering>false</filtering>
				<directory>src/main/java</directory>
				<includes>
					<include>**</include>
				</includes>
				<excludes>
					<exclude>**/*.java</exclude>
				</excludes>
			</resource>
			<!-- This entry makes sure component definitions for OSGi declarative 
				services are copied into the destination -->
			<resource>
				<targetPath>OSGI-INF</targetPath>
				<filtering>false</filtering>
				<directory>OSGI-INF</directory>
				<includes>
					<include>**</include>
				</includes>
			</resource>
			<!-- I really do not know why know a manual entry for src/main/resources 
				is necessary? It should be included following the Maven convention. -->
			<resource>
				<filtering>false</filtering>
				<directory>src/main/resources</directory>
				<includes>
					<include>**</include>
				</includes>
			</resource>

		</resources>
	</build>

	<!-- <reporting> <plugins> <plugin> <groupId>org.codehaus.mojo</groupId> 
		<artifactId>findbugs-maven-plugin</artifactId> <version>2.3.1</version> </plugin> 
		</plugins> </reporting> -->

	<!-- for GWT Maven plugin 1.3-SNAPSHOT -->
	<pluginRepositories>
		<pluginRepository>
			<id>gwt-maven.snapshots</id>
			<url>http://nexus.codehaus.org/snapshots</url>
			<snapshots>
				<enabled>true</enabled>
			</snapshots>
			<releases>
				<enabled>false</enabled>
			</releases>
		</pluginRepository>
	</pluginRepositories>

	<distributionManagement>
		<repository>
			<id>releases</id>
			<name>Internal Releases</name>
			<url>http://internal1.nxweb.de:8080/nexus/content/repositories/releases
			</url>
		</repository>
		<snapshotRepository>
			<id>snapshots</id>
			<name>Internal Snapshots</name>
			<url>http://internal1.nxweb.de:8080/nexus/content/repositories/snapshots
			</url>
		</snapshotRepository>
	</distributionManagement>


</project>